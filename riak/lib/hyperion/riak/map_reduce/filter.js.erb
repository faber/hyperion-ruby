function(riak_record) {
  var value, fieldValue, data, isNull;

  isNull = function(value) {
    return (typeof value === "undefined" || value === null);
  }

  any = function(value, coll) {
    for (var i = 0; i < coll.length; i++) {
      if (value === coll[i]) {
        return true;
      }
    }
    return false;
  }

  data = Riak.mapValuesJson(riak_record)[0];
  <% filters.each do |filter| %>
    value = <%= filter.value.to_json %>
    fieldValue = data[<%= filter.field.to_json %>];
    <% operator = filter.operator %>
    <% if operator == 'contains?' %>
       if (!any(fieldValue, <%= filter.value.to_json %>)) {
        return [];
      }
    <% elsif operator == '=' %>
      <% if filter.value.nil? %>
        if (!isNull(fieldValue)) {
          return [];
        }
      <% else %>
        if (fieldValue !== value) {
          return [];
        }
      <% end %>
    <% elsif operator == '!=' %>
      <% if filter.value.nil? %>
        if (isNull(fieldValue)) {
          return [];
        }
      <% else %>
        if (fieldValue === value) {
          return [];
        }
      <% end %>
    <% else %>
      if (isNull(fieldValue) || !(fieldValue <%= operator %> value)) {
        return [];
      }
    <% end %>
  <% end %>
  data.riak_key = riak_record.key;
  return [data];
}
